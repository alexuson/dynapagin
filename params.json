{"name":"Dynapagin","tagline":"A jQuery plugin for managing client-side pagination.","body":"dynapagin\r\n=========\r\n\r\nA jQuery plugin for managing client-side pagination. Works with Twitter\r\nBootstrap 3, for styling purposes.\r\n\r\n## To Use\r\n\r\n```javascript\r\n$('#dynapagin-example').dynapagin({\r\n    total: 10\r\n}, function (page) {\r\n    $('#dynapagin-example-content').html('This is <em>Page '+page+'</em>!');\r\n}).on('page', function (event, page) {\r\n    console.log('another way to provide content to page '+page+'.');\r\n});\r\n```\r\n### Options\r\n+ *pager*: Boolean flag to tell the plugin wether to provide a selection of\r\n    pages or just previous and next buttons\r\n+ *total*: The number of pages that will be in the pagination\r\n+ *page*: The starting page to display\r\n+ *previous*: Text to use for previous button\r\n+ *next*: Text to use for next button\r\n\r\n### Content\r\nDynapagin provides for an optional callback that will be called on load and when\r\na page change occurs. It recieves as a parameter the number of the page that is\r\nexpected to be loaded.\r\n\r\nDynapagin also fires off `page` events that occur when a page change occurs.\r\nJust like the callback method the number of the new page passed as a parameter.\r\nYou can attach an event handler to the dynapagin element for an additional level\r\nof control.\r\n\r\n## License\r\nDynapagin is licensed under the MIT License. Full text of the license can be\r\nread [here](https://raw.github.com/crcovar/dynapagin/master/LICENSE)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}