{"name":"Dynapagin","tagline":"A jQuery plugin for managing client-side pagination.","body":"A jQuery plugin for managing client-side pagination. Includes Stylesheet for\r\nbasic styling, and is completely compatible with Boostrap 3's\r\npagination component.\r\n\r\n## Usage\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <title>Dynapagin Complete Example</title>\r\n    <link href=\"stylesheets/style.css\" rel=\"stylesheet\" />\r\n  </head>\r\n  <body>\r\n    <div id=\"dynapagin-example-content\"></div>\r\n    <div id=\"dynapagin-example\"></div>\r\n    \r\n    <script type=\"application/javascript\" src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\r\n    <script type=\"application/javascript\" src=\"js/dynapagin.min.js\"></script>\r\n    <script type=\"application/javascript\">\r\n      $(function () { \r\n        $('#dynapagin-example').dynapagin({\r\n          total: 10\r\n        }, function (page) {\r\n          $('#dynapagin-example-content').html('<em>Page '+page+'</em>!');\r\n        }).on('page', function (event, page) {\r\n          console.log('another way to provide content to page '+page+'.');\r\n        });\r\n      });\r\n    </script>\r\n  </body>\r\n</html>\r\n```\r\n### Prereqs\r\nThe Only hard requirement of dynapagin is jQuery. However, you might also want\r\nto include some CSS to make the pagination selector presentable.\r\n\r\n### style.css and style.less\r\nThe provided style.css was generated using [LESS][1]. The less file has been\r\nincluded in the project for convenience.\r\n\r\n### Using Bootstrap\r\nDynapagin is completely compatible with Twitter's [Boostrap][2]. If you're using\r\nBoostrap dynapagin's selector will inherit the `.pagination` and `.pager`\r\nstyles, including those of their child elements.\r\n\r\n[1]: http://lesscss.org/ \"LESS CSS\"\r\n[2]: http://getbootstrap.com/ \"Boostrap\"\r\n\r\n### Options\r\n+ **total**: (*REQUIRED*) The number of pages that will be in the pagination.\r\n+ **pager**: Boolean flag to tell the plugin wether to provide a selection of\r\n    pages or just previous and next buttons. Defaults to `false`.\r\n+ **page**: The starting page to display. Defaults to first page.\r\n+ **previous**: Text to use for previous button. Defaults to \"&laquo;\"\r\n+ **next**: Text to use for next button. Defaults to \"&raquo;\"\r\n\r\n### Content\r\nDynapagin provides for an optional callback that will be called on load and when\r\na page change occurs. It recieves as a parameter the number of the page that is\r\nexpected to be loaded.\r\n\r\nDynapagin also fires off `page` events that occur when a page change occurs.\r\nJust like the callback method the number of the new page passed as a parameter.\r\nYou can attach an event handler to the dynapagin element for an additional level\r\nof control.\r\n\r\n## License\r\nDynapagin is licensed under the MIT License. Full text of the license can be\r\nread [here](https://raw.github.com/crcovar/dynapagin/master/LICENSE)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}